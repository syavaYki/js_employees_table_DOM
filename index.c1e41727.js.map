{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CC+BA,SAAS,EAAU,CAAI,EAAE,IAAA,EAAA,CAAA,CAAA,UAAA,MAAA,CAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,OACvB,AAAI,CAAA,GAAa,CAAC,GAAY,EAAK,GAAG,CAAC,OAAA,GACjC,EAAK,GAAG,CAAC,QAAQ,IAAI,GAAG,MAAM,CAAG,GACnC,EAAiB,QAAS,sCAAuC,SAE1D,CAAA,GAIP,CAAA,GAAa,CAAC,GAAY,EAAK,GAAG,CAAC,WAAA,GACjC,EAAK,GAAG,CAAC,YAAY,IAAI,GAAG,MAAM,EAAI,GACxC,EAAiB,QAAS,wBAAyB,SAE5C,CAAA,GAIP,CAAA,GAAa,CAAC,GAAY,EAAK,GAAG,CAAC,SAAA,GACjC,CAAC,EAAQ,QAAQ,CAAC,EAAK,GAAG,CAAC,YAC7B,EACE,QACA,0DAA6E,MAAA,CAAnB,EAAQ,IAAI,CAAC,OACvE,SAGK,CAAA,GAIP,CAAA,GAAa,CAAC,GAAY,EAAK,GAAG,CAAC,MAAA,GAEnC,CAAA,MAAM,EAAK,GAAG,CAAC,SACf,AAAmB,GAAnB,CAAC,EAAK,GAAG,CAAC,QACV,CAAC,EAAK,GAAG,CAAC,OAAS,EAAA,GAEnB,EACE,QACA,iDACA,SAGK,CAAA,IAIP,CAAA,CAAA,GAAa,CAAC,GAAY,CAAC,EAAK,GAAG,CAAC,SAAA,GAClC,CAAA,MAAM,CAAC,EAAK,GAAG,CAAC,YAAc,AAAuB,GAAvB,CAAC,EAAK,GAAG,CAAC,SAAa,CADnB,IAEpC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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction sortRows(rows, sortIndex, accending) {\n    rows.sort(function(a, b) {\n        var _a_cells_sortIndex_textContent;\n        var aClean = (_a_cells_sortIndex_textContent = a.cells[sortIndex].textContent) === null || _a_cells_sortIndex_textContent === void 0 ? void 0 : _a_cells_sortIndex_textContent.replace(\"$\", \"\").replace(\",\", \"\");\n        var bClean = b.cells[sortIndex].textContent.replace(\"$\", \"\").replace(\",\", \"\");\n        if (isNaN(aClean)) {\n            var _a_cells_sortIndex_textContent1, _b_cells_sortIndex_textContent;\n            if (accending) return (_a_cells_sortIndex_textContent1 = a.cells[sortIndex].textContent) === null || _a_cells_sortIndex_textContent1 === void 0 ? void 0 : _a_cells_sortIndex_textContent1.localeCompare(b.cells[sortIndex].textContent);\n            return (_b_cells_sortIndex_textContent = b.cells[sortIndex].textContent) === null || _b_cells_sortIndex_textContent === void 0 ? void 0 : _b_cells_sortIndex_textContent.localeCompare(a.cells[sortIndex].textContent);\n        } else {\n            if (accending) return parseFloat(aClean) - parseFloat(bClean);\n            return parseFloat(bClean) - parseFloat(aClean);\n        }\n    });\n}\nfunction validator(data) {\n    var formData = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n    if (formData || !formData && data.get(\"name\")) {\n        if (data.get(\"name\").trim().length < 4) {\n            pushNotification(\"Error\", \"Name must have 4 or more characters\", \"error\");\n            return false;\n        }\n    }\n    if (formData || !formData && data.get(\"position\")) {\n        if (data.get(\"position\").trim().length <= 0) {\n            pushNotification(\"Error\", \"Please enter position\", \"error\");\n            return false;\n        }\n    }\n    if (formData || !formData && data.get(\"office\")) {\n        if (!offices.includes(data.get(\"office\"))) {\n            pushNotification(\"Error\", \"Invalid office locatioin please select from following: \".concat(offices.join(\", \")), \"error\");\n            return false;\n        }\n    }\n    if (formData || !formData && data.get(\"age\")) {\n        if (isNaN(data.get(\"age\")) || +data.get(\"age\") < 18 || +data.get(\"age\") > 90) {\n            pushNotification(\"Error\", \"Age should be older then 18 and yonger then 99\", \"error\");\n            return false;\n        }\n    }\n    if (formData || !formData && +data.get(\"salary\")) {\n        if (isNaN(+data.get(\"salary\")) || +data.get(\"salary\") <= 0) {\n            pushNotification(\"Error\", \"Please enter valid salary\", \"error\");\n            return false;\n        }\n    }\n    return true;\n}\nfunction pushNotification(title, description) {\n    var type = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"\";\n    var message = document.createElement(\"div\");\n    message.className = \"notification \".concat(type);\n    message.dataset.qa = \"notification\";\n    message.style.top = \"\".concat(500, \"px\");\n    message.style.right = \"\".concat(10, \"px\");\n    message.innerHTML = '\\n      <h2 class=\"title\">'.concat(title, \"</h2>\\n      <p>\").concat(description, \"</p>\\n    \");\n    document.body.append(message);\n    setTimeout(function() {\n        message.remove();\n    }, 2000);\n}\nvar tHead = document.querySelector(\"thead\");\nvar tBody = document.querySelector(\"tbody\");\nvar headerCells = tHead === null || tHead === void 0 ? void 0 : tHead.rows[0].cells;\nvar className = \"acdSorted\";\nvar sortMapIndx = {};\nvar offices = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\",\n    \"London\"\n];\nvar formHTML = '<form\\n      id=\"form-new-empl\"\\n      class=\"new-employee-form\"\\n    >\\n      <label>Name:\\n        <input\\n          name=\"name\"\\n          type=\"text\"\\n          data-qa=\"name\"\\n        >\\n      </label>\\n\\n      <label>Position:\\n        <input\\n          name=\"position\"\\n          type=\"text\"\\n          data-qa=\"position\"\\n        >\\n      </label>\\n\\n      <label>Office:\\n        <select\\n          name=\"office\"\\n          type=\"text\"\\n          data-qa=\"office\"\\n        >\\n          <option value=\"'.concat(offices[0], '\">').concat(offices[0], '</option>\\n          <option value=\"').concat(offices[1], '\">').concat(offices[1], '</option>\\n          <option value=\"').concat(offices[2], '\">').concat(offices[2], '</option>\\n          <option value=\"').concat(offices[3], '\">').concat(offices[3], '</option>\\n          <option value=\"').concat(offices[4], '\">').concat(offices[4], '</option>\\n          <option value=\"').concat(offices[5], '\">').concat(offices[5], '</option>\\n          <option value=\"').concat(offices[6], '\">').concat(offices[6], '</option>\\n        </select>\\n      </label>\\n\\n      <label>Age:\\n        <input\\n          name=\"age\"\\n          type=\"number\"\\n          data-qa=\"age\"\\n        >\\n      </label>\\n\\n      <label>Salary:\\n        <input\\n          name=\"salary\"\\n          type=\"number\"\\n          data-qa=\"salary\"\\n        >\\n      </label>\\n\\n      <button type=\"submit\">Save to table</button>\\n    </form>');\ndocument.querySelector(\"table\").insertAdjacentHTML(\"afterend\", formHTML);\nvar formElem = document.body.querySelector(\"#form-new-empl\");\nfor(var i = 0; i < (tHead === null || tHead === void 0 ? void 0 : tHead.rows[0].cells.length); i++)sortMapIndx[headerCells[i].textContent] = i;\ntHead === null || tHead === void 0 ? void 0 : tHead.addEventListener(\"click\", function(e) {\n    var _document_querySelector;\n    var acdStat = e.target.classList.contains(className);\n    var tableRows = _to_consumable_array(document.querySelector(\"tbody\").rows);\n    sortRows(tableRows, sortMapIndx[e.target.textContent], !acdStat);\n    for(var i = 0; i < headerCells.length; i++){\n        var child = headerCells[i];\n        child.classList.remove(className);\n    }\n    if (!acdStat) e.target.classList.add(className);\n    for(var row = 0; row < tableRows.length; row++)(_document_querySelector = document.querySelector(\"tbody\")) === null || _document_querySelector === void 0 ? void 0 : _document_querySelector.append(tableRows[row]);\n});\ntBody === null || tBody === void 0 ? void 0 : tBody.addEventListener(\"click\", function(e) {\n    for(var i = 0; i < document.querySelector(\"tbody\").rows.length; i++)document.querySelector(\"tbody\").rows[i].classList.remove(\"active\");\n    e.target.parentElement.classList.add(\"active\");\n});\nformElem === null || formElem === void 0 ? void 0 : formElem.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var data = new FormData(formElem);\n    if (!validator(data)) return;\n    var newTr = document.createElement(\"tr\");\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = data.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var pair = _step.value;\n            var newTd = document.createElement(\"td\");\n            if (pair[0] === \"salary\") newTd.textContent = parseInt(pair[1]).toLocaleString(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0\n            });\n            else newTd.textContent = pair[1];\n            newTr.append(newTd);\n            tBody === null || tBody === void 0 ? void 0 : tBody.append(newTr);\n            formElem.reset();\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    pushNotification(\"Success\", \"Successfully added entry\", \"success\");\n});\ntBody === null || tBody === void 0 ? void 0 : tBody.addEventListener(\"dblclick\", function(e) {\n    var recInput = function recInput(ev) {\n        var _tHead_rows__cells__indexOf_textContent;\n        var actvInputCont = ev.target.value;\n        var keyMap = (_tHead_rows__cells__indexOf_textContent = tHead.rows[0].cells[_to_consumable_array(activeCell.parentElement.cells).indexOf(activeCell)].textContent) === null || _tHead_rows__cells__indexOf_textContent === void 0 ? void 0 : _tHead_rows__cells__indexOf_textContent.toLocaleLowerCase();\n        var tData = new FormData();\n        tData.append(keyMap, actvInputCont);\n        if (!actvInputCont) {\n            activeCell.textContent = curentTxt;\n            newInput.remove();\n            return;\n        }\n        if (validator(tData, false)) {\n            if (keyMap === \"salary\") activeCell.textContent = parseInt(actvInputCont).toLocaleString(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0\n            });\n            else activeCell.textContent = actvInputCont;\n            newInput.remove();\n        } else newInput.focus();\n    };\n    var activeCell = e.target;\n    var curentTxt = activeCell.textContent;\n    var newInput = document.createElement(\"input\");\n    newInput.classList.add(\"cell-input\");\n    activeCell.textContent = \"\";\n    activeCell.append(newInput);\n    newInput.focus();\n    newInput.addEventListener(\"focusout\", recInput);\n    newInput.addEventListener(\"keypress\", function(evnt) {\n        if (evnt.key === \"Enter\") recInput(evnt);\n    });\n});\n\n//# sourceMappingURL=index.c1e41727.js.map\n","'use strict';\n\nfunction sortRows(rows, sortIndex, accending) {\n  rows.sort((a, b) => {\n    const aClean = a.cells[sortIndex].textContent\n      ?.replace('$', '')\n      .replace(',', '');\n    const bClean = b.cells[sortIndex].textContent\n      .replace('$', '')\n      .replace(',', '');\n\n    if (isNaN(aClean)) {\n      if (accending) {\n        return a.cells[sortIndex].textContent?.localeCompare(\n          b.cells[sortIndex].textContent,\n        );\n      }\n\n      return b.cells[sortIndex].textContent?.localeCompare(\n        a.cells[sortIndex].textContent,\n      );\n    } else {\n      if (accending) {\n        return parseFloat(aClean) - parseFloat(bClean);\n      }\n\n      return parseFloat(bClean) - parseFloat(aClean);\n    }\n  });\n}\n\nfunction validator(data, formData = true) {\n  if (formData || (!formData && data.get('name'))) {\n    if (data.get('name').trim().length < 4) {\n      pushNotification('Error', 'Name must have 4 or more characters', 'error');\n\n      return false;\n    }\n  }\n\n  if (formData || (!formData && data.get('position'))) {\n    if (data.get('position').trim().length <= 0) {\n      pushNotification('Error', 'Please enter position', 'error');\n\n      return false;\n    }\n  }\n\n  if (formData || (!formData && data.get('office'))) {\n    if (!offices.includes(data.get('office'))) {\n      pushNotification(\n        'Error',\n        `Invalid office locatioin please select from following: ${offices.join(', ')}`,\n        'error',\n      );\n\n      return false;\n    }\n  }\n\n  if (formData || (!formData && data.get('age'))) {\n    if (\n      isNaN(data.get('age')) ||\n      +data.get('age') < 18 ||\n      +data.get('age') > 90\n    ) {\n      pushNotification(\n        'Error',\n        'Age should be older then 18 and yonger then 99',\n        'error',\n      );\n\n      return false;\n    }\n  }\n\n  if (formData || (!formData && +data.get('salary'))) {\n    if (isNaN(+data.get('salary')) || +data.get('salary') <= 0) {\n      pushNotification('Error', 'Please enter valid salary', 'error');\n\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction pushNotification(title, description, type = '') {\n  const message = document.createElement('div');\n\n  message.className = `notification ${type}`;\n  message.dataset.qa = 'notification';\n  message.style.top = `${500}px`;\n  message.style.right = `${10}px`;\n\n  message.innerHTML = `\n      <h2 class=\"title\">${title}</h2>\n      <p>${description}</p>\n    `;\n  document.body.append(message);\n\n  setTimeout(() => {\n    message.remove();\n  }, 2000);\n}\n\nconst tHead = document.querySelector('thead');\nconst tBody = document.querySelector('tbody');\nconst headerCells = tHead?.rows[0].cells;\nconst className = 'acdSorted';\nconst sortMapIndx = {};\nconst offices = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n  'London',\n];\nconst formHTML = `<form\n      id=\"form-new-empl\"\n      class=\"new-employee-form\"\n    >\n      <label>Name:\n        <input\n          name=\"name\"\n          type=\"text\"\n          data-qa=\"name\"\n        >\n      </label>\n\n      <label>Position:\n        <input\n          name=\"position\"\n          type=\"text\"\n          data-qa=\"position\"\n        >\n      </label>\n\n      <label>Office:\n        <select\n          name=\"office\"\n          type=\"text\"\n          data-qa=\"office\"\n        >\n          <option value=\"${offices[0]}\">${offices[0]}</option>\n          <option value=\"${offices[1]}\">${offices[1]}</option>\n          <option value=\"${offices[2]}\">${offices[2]}</option>\n          <option value=\"${offices[3]}\">${offices[3]}</option>\n          <option value=\"${offices[4]}\">${offices[4]}</option>\n          <option value=\"${offices[5]}\">${offices[5]}</option>\n          <option value=\"${offices[6]}\">${offices[6]}</option>\n        </select>\n      </label>\n\n      <label>Age:\n        <input\n          name=\"age\"\n          type=\"number\"\n          data-qa=\"age\"\n        >\n      </label>\n\n      <label>Salary:\n        <input\n          name=\"salary\"\n          type=\"number\"\n          data-qa=\"salary\"\n        >\n      </label>\n\n      <button type=\"submit\">Save to table</button>\n    </form>`;\n\ndocument.querySelector('table').insertAdjacentHTML('afterend', formHTML);\n\nconst formElem = document.body.querySelector('#form-new-empl');\n\nfor (let i = 0; i < tHead?.rows[0].cells.length; i++) {\n  sortMapIndx[headerCells[i].textContent] = i;\n}\n\ntHead?.addEventListener('click', (e) => {\n  const acdStat = e.target.classList.contains(className);\n  const tableRows = [...document.querySelector('tbody').rows];\n\n  sortRows(tableRows, sortMapIndx[e.target.textContent], !acdStat);\n\n  for (let i = 0; i < headerCells.length; i++) {\n    const child = headerCells[i];\n\n    child.classList.remove(className);\n  }\n\n  if (!acdStat) {\n    e.target.classList.add(className);\n  }\n\n  for (let row = 0; row < tableRows.length; row++) {\n    document.querySelector('tbody')?.append(tableRows[row]);\n  }\n});\n\ntBody?.addEventListener('click', (e) => {\n  for (let i = 0; i < document.querySelector('tbody').rows.length; i++) {\n    document.querySelector('tbody').rows[i].classList.remove('active');\n  }\n  e.target.parentElement.classList.add('active');\n});\n\nformElem?.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const data = new FormData(formElem);\n\n  if (!validator(data)) {\n    return;\n  }\n\n  const newTr = document.createElement('tr');\n\n  for (const pair of data.entries()) {\n    const newTd = document.createElement('td');\n\n    if (pair[0] === 'salary') {\n      newTd.textContent = parseInt(pair[1]).toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0,\n      });\n    } else {\n      newTd.textContent = pair[1];\n    }\n\n    newTr.append(newTd);\n    tBody?.append(newTr);\n    formElem.reset();\n  }\n\n  pushNotification('Success', 'Successfully added entry', 'success');\n});\n\ntBody?.addEventListener('dblclick', (e) => {\n  function recInput(ev) {\n    const actvInputCont = ev.target.value;\n    const keyMap =\n      tHead.rows[0].cells[\n        [...activeCell.parentElement.cells].indexOf(activeCell)\n      ].textContent?.toLocaleLowerCase();\n\n    const tData = new FormData();\n\n    tData.append(keyMap, actvInputCont);\n\n    if (!actvInputCont) {\n      activeCell.textContent = curentTxt;\n      newInput.remove();\n\n      return;\n    }\n\n    if (validator(tData, false)) {\n      if (keyMap === 'salary') {\n        activeCell.textContent = parseInt(actvInputCont).toLocaleString(\n          'en-US',\n          {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0,\n          },\n        );\n      } else {\n        activeCell.textContent = actvInputCont;\n      }\n\n      newInput.remove();\n    } else {\n      newInput.focus();\n    }\n  }\n\n  const activeCell = e.target;\n  const curentTxt = activeCell.textContent;\n  const newInput = document.createElement('input');\n\n  newInput.classList.add('cell-input');\n  activeCell.textContent = '';\n  activeCell.append(newInput);\n  newInput.focus();\n\n  newInput.addEventListener('focusout', recInput);\n\n  newInput.addEventListener('keypress', (evnt) => {\n    if (evnt.key === 'Enter') {\n      recInput(evnt);\n    }\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","validator","data","formData","arguments","get","trim","pushNotification","offices","includes","concat","join","isNaN","title","description","type","message","document","createElement","className","dataset","qa","style","top","right","innerHTML","body","append","setTimeout","remove","tHead","querySelector","tBody","headerCells","rows","cells","sortMapIndx","formHTML","insertAdjacentHTML","formElem","textContent","addEventListener","e","_document_querySelector","acdStat","target","classList","contains","tableRows","sortRows","sortIndex","accending","sort","a","b","_a_cells_sortIndex_textContent","_a_cells_sortIndex_textContent1","_b_cells_sortIndex_textContent","aClean","replace","bClean","localeCompare","parseFloat","child","add","row","parentElement","preventDefault","FormData","newTr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","next","done","pair","value","newTd","parseInt","toLocaleString","currency","minimumFractionDigits","maximumFractionDigits","reset","err","return","recInput","ev","_tHead_rows__cells__indexOf_textContent","actvInputCont","keyMap","activeCell","indexOf","toLocaleLowerCase","tData","curentTxt","newInput","focus","evnt","key"],"version":3,"file":"index.c1e41727.js.map"}